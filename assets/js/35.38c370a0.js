(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{351:function(t,r,o){"use strict";o.r(r);var s=o(28),e=Object(s.a)({},(function(){var t=this,r=t.$createElement,o=t._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h3",{attrs:{id:"原型链"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),o("h4",{attrs:{id:"原型链图"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原型链图"}},[t._v("#")]),t._v(" 原型链图")]),t._v(" "),o("p",[t._v("![原型链图]['./image/yuanxing.png']")]),t._v(" "),o("h4",{attrs:{id:"四个概念"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#四个概念"}},[t._v("#")]),t._v(" 四个概念")]),t._v(" "),o("ol",[o("li",[t._v("js 分为函数对象和普通对象，每个对象都有"),o("strong",[t._v("proto")]),t._v("属性，但是只有函数对象才有 prototype 属性；")]),t._v(" "),o("li",[t._v("Object、Function 都是 js 内置的函数, 类似的还有我们常用到的 Array、RegExp、Date、Boolean、Number、String")]),t._v(" "),o("li",[t._v("属性"),o("strong",[t._v("proto")]),t._v("是一个对象，它有两个属性，constructor 和"),o("strong",[t._v("proto")]),t._v("；")]),t._v(" "),o("li",[t._v("原型对象 prototype 有一个默认的 constructor 属性，用于记录实例是由哪个构造函数创建；")])]),t._v(" "),o("h4",{attrs:{id:"两个准则"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#两个准则"}},[t._v("#")]),t._v(" 两个准则")]),t._v(" "),o("ol",[o("li",[o("p",[o("strong",[t._v("准则 1")]),t._v("：原型对象（即 Person.prototype）的 constructor 指向构造函数本身\nPerson.prototype.constructor == Person")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("准则 2")]),t._v("：实例（即 person01）的"),o("strong",[t._v("proto")]),t._v("和原型对象指向同一个地方\nperson01.proto == Person.prototype")])])])])}),[],!1,null,null,null);r.default=e.exports}}]);