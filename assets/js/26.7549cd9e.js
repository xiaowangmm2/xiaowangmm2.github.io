(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{340:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-高阶组件与-mixin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-高阶组件与-mixin"}},[t._v("#")]),t._v(" 1. 高阶组件与 mixin")]),t._v(" "),a("p",[t._v("高阶组件属于函数式编程(functional programming)思想，对于被包裹的组件时不会感知到高阶组件的存在，而高阶组件返回的组件会在原来的组件之上具有功能增强的效果。而 Mixin 这种混入的模式，会给组件不断增加新的方法和属性，组件本身不仅可以感知，甚至需要做相关的处理(例如命名冲突、状态维护)，一旦混入的模块变多时，整个组件就变的难以维护，也就是为什么如此多的 React 库都采用高阶组件的方式进行开发。")]),t._v(" "),a("ul",[a("li",[t._v("属性代理: 操作 props,父级处理完 props，传给包裹组件")]),t._v(" "),a("li",[t._v("反向继承：渲染劫持：返回的高阶组件继承原组件，再高阶组件中根据条件，去反向执行继承的原组件的 render 方法。")])]),t._v(" "),a("h3",{attrs:{id:"_2-jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-jsx"}},[t._v("#")]),t._v(" 2. jsx")]),t._v(" "),a("ul",[a("li",[t._v("0 还是会被渲染，必须是布尔类型"),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<div>\n  {props.messages.length > 0 &&\n    <MessageList messages={props.messages} />\n  }\n</div>\n")])])])]),t._v(" "),a("li",[t._v("反之，如果你想渲染 false、true、null、undefined 等值，你需要先将它们转换为字符串："),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<div>\n  My JavaScript variable is {String(myVariable)}.\n</div>\n")])])])]),t._v(" "),a("li",[t._v("实现原理： jsx---\x3e 经过 babel 编译和 react 构造得到（js 对象结构）----\x3e React.dom 得到（dom 元素）-----\x3e最后插入到页面\n![jsx实现原理]['./image/jsx.png']\n**好处：**当数据变化，需要更新组件的时候，就可以用比较快的算法操作这个 JavaScript 对象，而不用直接操作页面上的 DOM，这样可以尽量少的减少浏览器重排，极大地优化性能")])]),t._v(" "),a("h3",{attrs:{id:"_3-diff-算法和虚拟-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-diff-算法和虚拟-dom"}},[t._v("#")]),t._v(" 3. diff 算法和虚拟 dom")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("虚拟 dom\n![虚拟dom1]['./image/dom1.png']\n![虚拟dom2]['./image/dom2.png']")])]),t._v(" "),a("li",[a("p",[t._v("为什么要有虚拟 dom")]),t._v(" "),a("ul",[a("li",[t._v("不操作 dom")]),t._v(" "),a("li",[t._v("跨平台")])])]),t._v(" "),a("li",[a("p",[t._v("虚拟 dom 步骤")]),t._v(" "),a("ul",[a("li",[t._v("用 js 对象结构表示 dom 数的结构，然后用这个树构建一个真正的 dom 树，插入到文档当中")]),t._v(" "),a("li",[t._v("当状态变更的时候，重新构造一颗新的对象树，然后用新的树与旧的树进行比较，记录两棵树差异")]),t._v(" "),a("li",[t._v("把 2 步所记录的差异应用到步骤 1 所构建的真正的 dom 树，试图就更新了")])])]),t._v(" "),a("li",[a("p",[t._v("diff 算法")]),t._v(" "),a("ul",[a("li",[t._v("Tree Diff: 将新旧两颗虚拟 DOM 树,按照层级对应的关系,从头到尾的遍历一遍,,就能找到那些元素是需要更新的,这种方式: Tree Diff\n![diff值tree]['./image/diff1.png']\n执行过程：create A -> create B -> create C -> delete A")]),t._v(" "),a("li",[t._v("Component Diff: 对比每一个层级的时候,会有自己的组件,这种组件的对比方式就叫: Component Diff ;\n"),a("ul",[a("li",[t._v("如果类型相同,暂时不更新,")]),t._v(" "),a("li",[t._v("如果类型不相同,就需要更新; ( 删除旧的组件,再创建一个新的组件,插入到删除组件的那个位置)\n![diff值component]['./image/diff2.png']\n执行过程：delete D -> create G")])])])])]),t._v(" "),a("li",[a("p",[t._v("Element Diff: 在类型相同的组件内, 再继续对比组件内部的元素,查看内部元素是否相同,如果需要修改,找到需要修改的元素,进行针对性的修改!")]),t._v(" "),a("ul",[a("li",[t._v("不加 key 时\n![diff值element]['./image/diff3.png']\n执行过程：B != A，则创建并插入 B，删除 A；以此类推，创建并插入 A、D、C，删除 B、C、D")]),t._v(" "),a("li",[t._v("加 key 时\n![diff值element]['./image/diff4.png']\n执行过程：B、D 不做任何操作，A、C 进行移动操作")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-ref"}},[t._v("#")]),t._v(" 4. ref")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 ref\nRefs 是使用 React.createRef() 创建的，并通过 ref 属性附加到 React 元素。在构造组件时，通常将 Refs 分配给实例属性，以便可以在整个组件中引用它们。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组建中通过this.myRef.current获取实例")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focusTextInput")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("ref 的值根据节点的类型而有所不同：")]),t._v(" "),a("ul",[a("li",[t._v("当 ref 属性用于 HTML 元素时，构造函数中使用 React.createRef() 创建的 ref 接收底层 DOM 元素作为其 current 属性。")]),t._v(" "),a("li",[t._v("当 ref 属性用于自定义 class 组件时，ref 对象接收组件的挂载实例作为其 current 属性。")]),t._v(" "),a("li",[a("strong",[t._v("你不能在函数组件上使用 ref 属性，因为他们没有实例")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[t._v("将 DOM Refs 暴露给父组件\nRef 转发是一个可选特性，其允许某些组件接收 ref，并将其向下传递（换句话说，“转发”它）给子组件。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//子组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" FancyButton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forwardRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FancyButton"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件，你可以直接获取 DOM button 的 ref：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("FancyButton ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Click me"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("FancyButton"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("string 的 ref 的弊端")]),t._v(" "),a("ul",[a("li",[t._v("当 ref 定义为 string 时，需要 React 追踪当前正在渲染的组件")]),t._v(" "),a("li",[t._v("string ref 无法被组合，例如一个第三方库的父组件已经给子组件传递了 ref，那么我们就无法再在子组件上添加 ref 了，而 callback ref 可完美解决此问题。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-component-和-purecomponent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-component-和-purecomponent"}},[t._v("#")]),t._v(" 5. Component 和 PureComponent")]),t._v(" "),a("p",[t._v("一、React.Component 和 React.PureComponent 很相似，两则的区别在于，")]),t._v(" "),a("ol",[a("li",[t._v("PureComponent 类帮我们以浅比较的方式对比 props 和 state，实现了 shouldComponentUpdate()函数，进行浅比较值没变（对象和数组引用没变）的情况下，组件是不会更新的。")]),t._v(" "),a("li",[t._v("在某些情况下，使用 PureComponent 可以减少 render 函数的执行，提升性能。")])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5a3200fe51882554bd5111a0",target:"_blank",rel:"noopener noreferrer"}},[t._v("diff"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/livoras/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚拟 dom"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://juejin.im/post/5914fb4a0ce4630069d1f3f6#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("高阶"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);