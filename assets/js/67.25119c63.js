(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{293:function(e,t,v){"use strict";v.r(t);var _=v(28),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"git-版本管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-版本管理"}},[e._v("#")]),e._v(" git 版本管理")]),e._v(" "),v("p",[e._v("应用的是 "),v("code",[e._v("Git flow")]),e._v(" 这个工作流是 Vincent Driessen 2010 年发布出来的分支管理模型，热度非常高，我安利的也是这个，公司管理项目也是这么玩的。")]),e._v(" "),v("ul",[v("li",[v("p",[v("strong",[e._v("按功能划分")]),e._v("，可分为 5 种分支 Master、Develop、Release、Feature 和 Hotfix；")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("按生命周期划分")]),e._v("，可分为 长期分支和暂时分支，更贴切地说，主要分支和协助分支；")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("分支")]),e._v(" "),v("th",[e._v("分支名称")]),e._v(" "),v("th",[e._v("生命周期")]),e._v(" "),v("th",[e._v("描述")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("Master")]),e._v(" "),v("td",[e._v("主分支")]),e._v(" "),v("td",[e._v("长期")]),e._v(" "),v("td",[e._v("从这个分支上检出的都是稳定的发布版，版本发布后记得打上 git 标签。好处是，在测试的时候，不影响下一个版本功能并行开发")])]),e._v(" "),v("tr",[v("td",[e._v("Release-hotfix")]),e._v(" "),v("td",[e._v("修复分支")]),e._v(" "),v("td",[e._v("暂时")]),e._v(" "),v("td",[e._v("用于线上紧急 bug 修复，修复后，合并回 Master 和 Develop，然后删除分支")])]),e._v(" "),v("tr",[v("td",[e._v("Release")]),e._v(" "),v("td",[e._v("预发分支")]),e._v(" "),v("td",[e._v("暂时")]),e._v(" "),v("td",[e._v("从 Develop 检出 Release 分支，修改后提交，测试发布后，合并到 Master 和 Develop，然后删除分支")])]),e._v(" "),v("tr",[v("td",[e._v("Develop")]),e._v(" "),v("td",[e._v("开发分支")]),e._v(" "),v("td",[e._v("长期")]),e._v(" "),v("td",[e._v("用于日常开发，存放最新的功能，完成一个版本合并到这里")])]),e._v(" "),v("tr",[v("td",[e._v("Feature")]),e._v(" "),v("td",[e._v("功能分支")]),e._v(" "),v("td",[e._v("暂时")]),e._v(" "),v("td",[e._v("用来做功能开发，从 Develop 检出，有 5 个人开发可建 5 个 Feature-* 分支，完成后再合并到 Develop，然后删除分支")])])])])])]),e._v(" "),v("h2",{attrs:{id:"总结一下"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结一下"}},[e._v("#")]),e._v(" 总结一下")]),e._v(" "),v("h3",{attrs:{id:"规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[e._v("#")]),e._v(" 规则")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("规则一：Master 为保护分支,Release-hotfix、Develop 分支由此检出，Release-hotfix、Release 分支最终合并到此。")])]),e._v(" "),v("li",[v("p",[e._v("规则二：Develop 为保护分支，Feature、Release 分支由此检出，Feature、Release、Release-hotfix 分支最终合并到此。")])]),e._v(" "),v("li",[v("p",[e._v("规则三：打 Tag，Release-hotfix、Release 发布后合并到 Master，与此同时必须打 Tag。")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("以上操作由各组 Leader 或架构师完成。")])])]),e._v(" "),v("li",[v("p",[e._v("规则四：Master、Develop 不允许任何 Commit 操作行为；只允许通过 Merge Requests 合并。")])]),e._v(" "),v("li",[v("p",[e._v("规则五：所有针对 Master、Develop 的 Merge Requests，需要架构师或者我 完成 Code Review 之后才行。")])])]),e._v(" "),v("h3",{attrs:{id:"建议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#建议"}},[e._v("#")]),e._v(" 建议")]),e._v(" "),v("ol",[v("li",[e._v("建议一：所有被合并的暂时分支可以删除。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);