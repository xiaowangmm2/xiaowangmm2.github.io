(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{291:function(t,e,n){"use strict";n.r(e);var s=n(28),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("项目开发少不了多人协作，难免会碰到这类问题：由于大家对代码格式化配置不统一，就会产生版本冲突。")])]),t._v(" "),n("h1",{attrs:{id:"打开配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打开配置文件"}},[t._v("#")]),t._v(" 打开配置文件")]),t._v(" "),n("p",[t._v("1."),n("strong",[n("code",[t._v("Code -> preferences(首选配置) -> setting(设置)")])]),t._v("; 2.快捷键 "),n("code",[t._v("command + ,")]),t._v(";")]),t._v(" "),n("p",[t._v("配置模式界面就打开了，点击右上角红色区域按钮，就可以打开 "),n("code",[t._v("setting.json")]),t._v(" 文件了。")]),t._v(" "),n("img",{attrs:{src:"http://ruizhengyun.cn/code-note/book/assets/vscode.setting.png",width:"600"}}),t._v(" "),n("h1",{attrs:{id:"编写配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写配置文件"}},[t._v("#")]),t._v(" 编写配置文件")]),t._v(" "),n("p",[t._v("这块配置支持 "),n("code",[t._v("html、css、js")]),t._v(" 等文件的格式化")]),t._v(" "),n("h1",{attrs:{id:"eslint-和-prettier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-和-prettier"}},[t._v("#")]),t._v(" eslint 和 prettier")]),t._v(" "),n("p",[t._v("1."),n("code",[t._v("eslint")]),t._v(" 是用来做"),n("strong",[t._v("代码风格检查")]),t._v("的，比较关注代码质量，并且会提示不符合风格规范的代码。除此之外 "),n("code",[t._v("eslint")]),t._v(" 也具有一部分代码格式化的功能。这块配置长成这样")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存时格式化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.formatOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 eslint 保存时自动修复")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint.autoFixOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),n("p",[t._v("2."),n("code",[t._v("prettier")]),t._v(" 本身就是用来做代码格式化的，准确的说它是来美化代码的，所以这方面有更大的优势。同时 "),n("code",[t._v("prettier")]),t._v(" 也是对 "),n("code",[t._v("eslint")]),t._v(" 格式化的基础上的一个极好的补充。")]),t._v(" "),n("ul",[n("li",[t._v("那么两者都有格式化的功能，就不会有冲突吗？\n有，不过只要简单的配置就可以解决了，比如语句末尾不加分号和强制单引号等 eslint 风格检查")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prettier 设置语句末尾不加分号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier.semi"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prettier 设置强制单引号")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier.singleQuote"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),n("h1",{attrs:{id:"vue-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-文件"}},[t._v("#")]),t._v(" vue 文件")]),t._v(" "),n("p",[t._v("vscode 对 vue 支持也是很给力的，只需用 "),n("strong",[t._v("Vetur 插件")]),t._v("，其配置直接用的 prettier 规范。这也是我们选择 "),n("strong",[t._v("prettier 格式化代码")]),t._v("的另一个原因。")]),t._v(" "),n("h1",{attrs:{id:"冲突"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冲突"}},[t._v("#")]),t._v(" 冲突")]),t._v(" "),n("ol",[n("li",[t._v("eslint 推荐 "),n("code",[t._v("function () {}")]),t._v("、prettier 则推荐"),n("code",[t._v("function() {}")]),t._v("，如果喜欢用第一种风格那什么都不应该，如果你和我一样喜欢第二种，需要设置 "),n("code",[t._v("eslint.validate")]),t._v(", 将自动修复功能注释，保证走 "),n("code",[t._v("prettier")]),t._v(" 规范。如果项目中也设置了 "),n("code",[t._v("eslint")]),t._v("，还需要在 "),n("code",[t._v("eslintrc.js")]),t._v(" 中配置，")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslintrc.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'space-before-function-paren'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// setting.json\n{\n  "window.zoomLevel": 0,\n  /** git **/\n  "git.path": null,\n  "git.autofetch": true,\n  /** files **/\n  // 标签自动补全\n  "files.associations": {\n    "*.vue": "vue",\n    "*.wxss": "css",\n    "*.wxml": "html",\n    "*.ts": "javascript"\n  },\n  //\n  // 控制何时自动保存已更新文件\n  // 接受的值: "off"、"afterDelay"、"onFocusChange" (编辑器失去焦点)、"onWindowChange" (窗口失去焦点)\n  // 如果设置为 "afterDelay"，可在 "files.autoSaveDelay" 中配置延迟时间\n  "files.autoSave": "onFocusChange",\n  /** editor **/\n  "editor.fontFamily": "Menlo, Monaco, \'Courier New\', monospace",\n  "editor.fontSize": 12,\n  "editor.lineHeight": 24,\n  "editor.fontWeight": "500",\n  // 代码缩进修改成 2 个空格\n  "editor.tabSize": 2,\n  // 100 列后换行\n  "editor.wordWrap": "on",\n  // "editor.wordWrapColumn": 100,\n  // 保存时格式化\n  "editor.formatOnSave": true,\n  // 显示 markdown 中英文切换时产生的特殊字符\n  "editor.renderControlCharacters": true,\n  "editor.formatOnPaste": true,\n  "editor.formatOnType": true,\n  // 右侧小地图\n  "editor.minimap.enabled": true,\n  "editor.minimap.renderCharacters": false,\n  "editor.minimap.maxColumn": 60,\n  /** eslint and prettier **/\n  // 使用 eslint 風格使用standard 進行代碼規則限制\n  "eslint.autoFixOnSave": true,\n  // eslint 检测文件类型，针对 vue 文件 和 html 文件\n  "eslint.validate": [\n    "javascript",\n    "javascriptreact",\n    "vue-html",\n    {\n      "language": "html",\n      "autoFix": true\n    },\n    {\n      "language": "vue",\n      "autoFix": true\n    },\n    {\n      "language": "js",\n      "autoFix": true\n    },\n  ],\n  /** prettier **/\n  // prettier 设置语句末尾不加分号\n  "prettier.semi": true,\n  // prettier 设置强制单引号\n  "prettier.singleQuote": true,\n  /** 面包屑 **/\n  // 开启 vscode 文件路径导航\n  "breadcrumbs.enabled": true,\n  // 启用后，按下 TAB 键，将展开 Emmet 缩写。\n  "emmet.triggerExpansionOnTab": true,\n  /** 主題 **/\n  "workbench.colorTheme": "Monokai",\n  // 左側工具欄是否可見\n  "workbench.activityBar.visible": true,\n  //自动保存信息\n  // By default, create file  username\n  "fileheader.Author": "芮正云 16396@etransfar.com",\n  // By default, update file  username.\n  "fileheader.LastModifiedBy": "芮正云 16396@etransfar.com",\n  // By default, common template. Do not modify it!!!!!\n  "fileheader.tpl": "/**\\r\\n * @创建码农: {author}\\n * @创建日期: {createTime}\\n * @最近更新: {lastModifiedBy}\\n * @更新时间: {updateTime}\\n * @文件描述: \\n */\\n",\n  /** js **/\n  // js設置單引號\n  "javascript.preferences.quoteStyle": "single",\n  // 让函数(名)和后面的括号之间加个空格\n  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,\n  /** vue **/\n  // 选择 vue 文件中 template 的格式化工具\n  "vetur.format.defaultFormatter.html": "js-beautify-html",\n  // vetur 的自定义设置\n  "vetur.format.defaultFormatterOptions": {\n    "prettier": {\n      "singleQuote": true,\n      "semi": false\n    }\n  },\n  /** stylus **/\n  // 格式化stylus, 需安装Manta\'s Stylus Supremacy插件\n  "stylusSupremacy.insertColons": false, // 是否插入冒号\n  "stylusSupremacy.insertSemicolons": false, // 是否插入分好\n  "stylusSupremacy.insertBraces": false, // 是否插入大括号\n  "stylusSupremacy.insertNewLineAroundImports": false, // import之后是否换行\n  "stylusSupremacy.insertNewLineAroundBlocks": false,\n  "[markdown]": {\n    "editor.defaultFormatter": "yzhang.markdown-all-in-one"\n  } // 两个选择器中是否换行\n}\n\n\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);